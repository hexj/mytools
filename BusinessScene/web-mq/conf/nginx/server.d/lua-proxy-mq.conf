#1.对于json 生产者提供统一的代理；
#2.对于返回的json 进行标准化管理，类似于spring-aop；

location /proxymq/ {


  default_type 'text/plain';

  #error_log  logs/error-api3.log  debug;
  error_log  logs/error-proxy-mq.log  debug;
  #error_log  logs/error-api.log  error;

  proxy_http_version 1.1;
  proxy_set_header Connection "Keep-Alive";
  proxy_set_header Proxy-Connection "Keep-Alive";

  client_max_body_size 30m;

  content_by_lua_file   '/usr/local/openresty/lua.app/lua.d/reqcontent.lua';

  log_by_lua_file '/usr/local/openresty/lua.app/lua.d/log2mq.lua';

  #注意使用容器路径
  #alias   html/;
  #redhat
  alias /usr/local/openresty/nginx/html;
  #alias   /data/www/;

}
